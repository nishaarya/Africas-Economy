# -*- coding: utf-8 -*-
"""Project 1 - Africa Economic, Banking and Systemic Crisis Data - Nisha Arya

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vckoakzK-BMWq_KpAmQK9qEUKfomMUXq
"""

#website: https://www.kaggle.com/chirin/africa-economic-banking-and-systemic-crisis-data/downloads/africa-economic-banking-and-systemic-crisis-data.zip/1

import pandas as pd
!pip install psutil requests
df = pd.read_csv('africa-economic-banking-and-systemic-crisis-data.zip')
df.head()

df.shape
# (1059, 14) as output which means our dataset has 1059 rows and 14 columns

df.columns
# case - A number which denotes a specific country
# cc3 - A three letter country code
#country - The name of the country
#year - The year of the observation
#systemic_crisis - "0" means that no systemic crisis occurred in the year and "1" means that a systemic crisis occurred in the year.
#exch_usd - The exchange rate of the country vis-a-vis the USD
#domestic_debt_in_default - "0" means that no sovereign domestic debt default occurred in the year and "1" means that a sovereign domestic debt default occurred in the year
#sovereign_external_debt_default - "0" means that no sovereign external debt default occurred in the year and "1" means that a sovereign external debt default occurred in the year
#gdp_weighted_default - The total debt in default vis-a-vis the GDP
#inflation_annual_cpi - The annual CPI Inflation rate
#independence - "0" means "no independence" and "1" means "independence"
#currency_crises - "0" means that no currency crisis occurred in the year and "1" means that a currency crisis occurred in the year
#inflation_crises - "0" means that no inflation crisis occurred in the year and "1" means that an inflation crisis occurred in the year
#banking_crisis - "no_crisis" means that no banking crisis occurred in the year and "crisis" means that a banking crisis occurred in the year

unique_countries=df.country.unique()
print(df.country.unique())

df.dtypes

df.describe()

df.isnull().sum()

import numpy as np

print(np.NaN)

df = df.replace("?", np.NaN)

df.isnull().sum()
#there are no null values

# Did the USD exchange rate impact inflation and CPI in a way that created a banking crisis in Africa?

# an exchange rate is the rate at which one currency will be exchanged for another. 
# It is also regarded as the value of one country's currency in relation to another currency
# Exchange rates are determined in the foreign exchange market
# the exchange market is open to a wide range of different types of buyers and sellers, and where currency trading is continuous

# Inflation is a quantitative measure of the rate at which the average price level of a basket of selected goods and services in an economy increases over a period of time.
# It is the constant rise in the general level of prices where a unit of currency buys less than it did in prior periods
# inflation indicates a decrease in the purchasing power of a nationâ€™s currency.
# As prices rise, a single unit of currency loses value as it buys fewer goods and services. 
# This loss of purchasing power impacts the general cost of living for the public which ultimately leads to a deceleration in economic growth.

# The CPI is a measure that examines the average price of a basket of goods and services which are of primary consumer needs. 
# They include transportation, food and medical care. 
# CPI is calculated by taking price changes for each item in the predetermined basket of goods and averaging them based on their relative weight in the whole basket. 
# Changes in the CPI are used to assess price changes associated with the cost of living
# CPI is one of the most frequently used statistics for identifying periods of inflation or deflation.

#RESEARCH QUESTION - DOES THE EXCHANGE RATE OF USD$ HAVE AN AFFECT ON INFLATION ANNUAL CPI RATES WHICH IN TURN CAUSE A BANKING CRISIS?

# create a new dataframe from 1990-2000

df2 = df[(df['year'] >=1990)]
df2 = df2[(df['year'] <=2000)]
df2.head(11)

#CREATE A NEW SUBSET
new_df = df2[['year', 'exch_usd', 'inflation_annual_cpi', 'banking_crisis']]
new_df.head()

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

# FIX ALL THE Y AXIS BELOW

ax = sns.barplot(x="year" , y="exch_usd" , data=new_df) 
ax.set_title('The Exchange of USD$ between 1990-2000')
plt.xticks(rotation=45)
plt.show()

ax = sns.barplot(x="year" , y="inflation_annual_cpi" , data=new_df) 
ax.set_title('The change in Inflation Annual CPI rates between 1990-2000')
plt.xticks(rotation=45)
plt.show()

ax = sns.lineplot(x="year" , y="exch_usd" , data=new_df) 
ax.set_title('The Exchange of USD$ between 1990-2000')
plt.show()

ax = sns.lineplot(x="year" , y="inflation_annual_cpi" , data=new_df) 
ax.set_title('The change in Inflation Annual CPI rates between 1990-2000')
plt.show()

ax = sns.relplot(x="year", y="exch_usd", data=new_df)
plt.title('Exchange of USD between 1990-2000')
plt.show()

sns.relplot(x="year", y="inflation_annual_cpi", data=new_df)

fig,axes = plt.subplots(figsize = (8, 8))
sns.swarmplot(x="year", y="exch_usd", data=new_df, hue="banking_crisis")
plt.xticks(rotation=45)

fig,axes = plt.subplots(figsize = (8, 8))
sns.swarmplot(x="year", y="inflation_annual_cpi", data=new_df, hue="banking_crisis")
plt.xticks(rotation=45)

# from the data above, in 1990 when the exchange rate of USD jumped up, it had a continuing effect on the annual cpi levels, affecting inflation
# it caused an economic crisis for three years, where the inflation rate was just increasing, leading to a banking crisis
# in 1993, the inflation rate decreased, however the exchange rate of USD was still increasing
# i believe this stabalised the economy slowly but surely, leading to no banking crisis'

fig,axes = plt.subplots(figsize = (10, 10))
sns.heatmap(df.corr(), annot = True)
plt.show()

#the higher the number the higher the linear correlated betwen the two variables

# looking at the above heatmap, it contradicts my research that the exchange rate of USD$ has an affect on annual inflation CPI rates, which may create a banking crisis
# the heat map tells me that the exchange of USD$ and inflation annual CPI has a -0.012 correlation
# this tells me that there is very little linear correlation between these 2  variables
# however, i can see that there is a high correlation between a fvew variables but most are quite obvious, e.g.inflation crises and currency crises
# i want to explore sovereign_external_debt_default and exch_usd

df3 = df[(df['year'] == 1996)]
df3.head()

df3 = df3[['cc3', 'year', 'exch_usd', 'sovereign_external_debt_default']]
df3.head(16)

df3.to_csv('choro.csv')

df4 = df[(df['year'] == 1996)]
df4.head()

df4 = df4[['country', 'year', 'exch_usd', 'sovereign_external_debt_default']]
df4.head(16)

import pandas as pd
import plotly.graph_objs as go

fig = go.Figure(data=go.Choropleth(
    locations=df4['country'],
    z = df4['exch_usd'].astype(float),
    locationmode = 'country names',
    colorbar_title = "Exchange Rates of USD$",))

fig.update_layout(
    title_text = 'Exchange Rate of USD in 1996',
    geo_scope='africa',
)


fig.show()

import pandas as pd
import plotly.graph_objs as go

fig = go.Figure(data=go.Choropleth(
    locations=df4['country'],
    z = df4['sovereign_external_debt_default'].astype(float),
    locationmode = 'country names',
    colorbar_title = "Sovereign External Debt Default",))

fig.update_layout(
    title_text = 'Sovereign External Debt Default in 1996',
    geo_scope='africa',
)


fig.show()

df.head()

# 1. Choose a target to predict, and check its distribution

y = df2['banking_crisis']
X = df2.drop(columns='banking_crisis')

y.describe()

y.value_counts(normalize=True)

# 2.Choose what data to hold out for your test set

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size =0.2, random_state=42)

X_train

X_test

y_train.value_counts(normalize=True)

y_test.value_counts(normalize=True)

# 3. Choose an appropriate evaluation metric

#Majority class baseline

y_pred = [False] * len(y_test)

from sklearn.metrics import roc_auc_score
roc_auc_score(y_test, y_pred)

!pip install category_encoders
import category_encoders as ce
import pandas as pd
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import train_test_split
from sklearn.pipeline import make_pipeline
from sklearn.tree import DecisionTreeClassifier

pipe = make_pipeline(
    ce.OneHotEncoder(use_cat_names=True),
    DecisionTreeClassifier(max_depth=2)
)

scores = cross_val_score(pipe, X_train, y_train, cv=5, scoring='roc_auc', n_jobs=-1)
print('Validation ROC AUC:', scores)

!pip install dtreeviz
!apt-get install graphviz

from dtreeviz.trees import dtreeviz
import graphviz
from sklearn.tree import export_graphviz

pipe.fit(X_train, y_train)
tree = pipe.named_steps['decisiontreeclassifier']
encoder = pipe.named_steps['onehotencoder']
feature_names = encoder.transform(X_train).columns
feature_names[tree.feature_importances_ > 0]

dot_data = export_graphviz(tree, out_file=None,
                           feature_names=feature_names, class_names=['False', 'True'],
                           filled=True, impurity=False, proportion=True)

graphviz.Source(dot_data)

#If you drop domestic_debt_in_default, the Validation gets better

X_train = X_train.drop(columns='domestic_debt_in_default')
scores = cross_val_score(pipe, X_train, y_train, cv=5, scoring='roc_auc')
print('Validation ROC AUC:', scores)

#this is a new data frame from years 1990-2000, incl year, exch_usd and banking_crisis

df5 = df2[['year', 'exch_usd', 'banking_crisis']]
df5.head(11)

ax = sns.barplot(x="year" , y="exch_usd" , data=df5) 
ax.set_title('The change in Exchange Rate of USD between 1990-2000')
plt.xticks(rotation=45)
plt.show()

#so the years that the exch_usd was low, there was no banking crisis if i look back at the dataframe

ax = sns.barplot(x="exch_usd" , y="banking_crisis" , data=df5) 
ax.set_title('The change in Exchange Rate of USD between 1990-2000')
plt.xticks(rotation=45)
plt.show()

#this is not a good visualisation

fig,axes = plt.subplots(figsize = (8, 8))
sns.swarmplot(x="year", y="exch_usd", data=df5, hue="banking_crisis")
plt.xticks(rotation=45)

#this visualization shows when a banking crisis